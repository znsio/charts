{{- if .Values.enabled }}
{{- if .Values.istioMetrics.enabled }}
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  labels:
    release: {{ .Values.prometheusReleaseLabel }}
    managedby: nopo11y
  name: {{ include "deployment.name" . }}-availability-slo
  namespace: {{ .Values.namespace }}
spec:
  labels:
    app: sloth
    role: alert-rules
    component: {{ include "deployment.name" . }}-availability-SLO-rules
  service: {{ include "deployment.name" . }}
  slos:
  - alerting:
      annotations:
        {{- if .Values.grafanaURL }}
        dashboard: {{ .Values.grafanaURL }}/d/slo-detail?var-service={{ include "deployment.name" . }}
        {{- end }}
        summary: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
          be succesfully served (non 5xx). When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
        description: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
          be succesfully served (non 5xx). When you receive this alert it means that the
          SLO is at risk as your error budget is getting exhausted. To know more about
          ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
      name: {{ include "deployment.name" . }} - availability SLO is at RISK 
      pageAlert:
        labels:
          alert_type: symptom
          severity: critical
      ticketAlert:
        labels:
          alert_type: symptom
          severity: warning
    description: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
      be succesfully served (non 5xx). When you receive this alert it means that the
      SLO is at risk as your error budget is getting exhausted. To know more about
      ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
    name: availability-{{ include "deployment.name" . }}
    objective: {{ .Values.availabilitySLO }}
    sli:
      events:
        errorQuery: sum(rate(istio_requests_total{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}source_workload!~"unknown", reporter="source", destination_workload="{{ include "deployment.name" . }}", response_code=~"5.."}[{{ printf "{{.window}}" }}]))
        totalQuery: sum(rate(istio_requests_total{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}source_workload!~"unknown", reporter="source", destination_workload="{{ include "deployment.name" . }}"}[{{ printf "{{.window}}" }}]))
---
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  labels:
    release: {{ .Values.prometheusReleaseLabel }}
    managedby: nopo11y
  name: {{ include "deployment.name" . }}-latency-slo
  namespace: {{ .Values.namespace }}
spec:
  labels:
    app: sloth
    role: alert-rules
    component: {{ include "deployment.name" . }}-latency-SLO-rules
  service: {{ include "deployment.name" . }}
  slos:
  - alerting:
      annotations:
        {{- if .Values.grafanaURL }}
        dashboard: {{ .Values.grafanaURL }}/d/slo-detail?var-service={{ include "deployment.name" . }}
        {{- end }}
        summary: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
        description: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
      name: {{ include "deployment.name" . }} - latency SLO is at RISK
      pageAlert:
        labels:
          alert_type: symptom
          severity: critical
      ticketAlert:
        labels:
          alert_type: symptom
          severity: warning
    description: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that the
      SLO is at risk as your error budget is getting exhausted. To know more about
      ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
    name: latency-{{ include "deployment.name" . }}
    objective: {{ .Values.latencySLO }}
    sli:
      events:
        errorQuery: (sum(rate(istio_request_duration_milliseconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}source_workload!~"unknown", reporter="source", destination_workload="{{ include "deployment.name" . }}", le="+Inf"}[{{ printf "{{.window}}" }}])) - sum(rate(istio_request_duration_milliseconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}source_workload!~"unknown", reporter="source", destination_workload="{{ include "deployment.name" . }}", le="{{ .Values.latency }}"}[{{ printf "{{.window}}" }}])))
        totalQuery: sum(rate(istio_request_duration_milliseconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}source_workload!~"unknown", reporter="source", destination_workload="{{ include "deployment.name" . }}", le="+Inf"}[{{ printf "{{.window}}" }}]))
{{- end }}
{{- end }}
---
{{- if .Values.enabled }}
{{- if .Values.nginxIngressMetrics.enabled }}
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  labels:
    release: {{ .Values.prometheusReleaseLabel }}
    managedby: nopo11y
  name: {{ include "deployment.name" . }}-availability-slo
  namespace: {{ .Values.namespace }}
spec:
  labels:
    app: sloth
    role: alert-rules
    component: {{ include "deployment.name" . }}-availability-SLO-rules
  service: {{ include "deployment.name" . }}
  slos:
  - alerting:
      annotations:
        {{- if .Values.grafanaURL }}
        dashboard: {{ .Values.grafanaURL }}/d/slo-detail?var-service={{ include "deployment.name" . }}
        {{- end }}
        summary: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
          be succesfully served (non 5xx). When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
        description: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
          be succesfully served (non 5xx). When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
      name: {{ include "deployment.name" . }}-ingress - availability SLO is at RISK
      pageAlert:
        labels:
          alert_type: symptom
          severity: critical
      ticketAlert:
        labels:
          alert_type: symptom
          severity: warning
    description: SLO to measure success vs errors - {{ .Values.availabilitySLO }}% of the time requests should
      be succesfully served (non 5xx). When you receive this alert it means that the
      SLO is at risk as your error budget is getting exhausted. To know more about
      ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
    name: availability-{{ include "deployment.name" . }}
    objective: {{ .Values.availabilitySLO }}
    sli:
      events:
        errorQuery: sum(rate(nginx_ingress_controller_requests{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}ingress=~"{{ .Values.nginxIngressMetrics.ingressName }}",status=~"5..", exported_service="{{ .Values.nginxIngressMetrics.serviceName }}"}[{{ printf "{{.window}}" }}]))
        totalQuery: sum(rate(nginx_ingress_controller_requests{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}ingress=~"{{ .Values.nginxIngressMetrics.ingressName }}", exported_service="{{ .Values.nginxIngressMetrics.serviceName }}"}[{{ printf "{{.window}}" }}]))
---
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  labels:
    release: {{ .Values.prometheusReleaseLabel }}
    managedby: nopo11y
  name: {{ include "deployment.name" . }}-latency-slo
  namespace: {{ .Values.namespace }}
spec:
  labels:
    app: sloth
    role: alert-rules
    component: {{ include "deployment.name" . }}-latency-SLO-rules
  service: {{ include "deployment.name" . }}
  slos:
  - alerting:
      annotations:
        {{- if .Values.grafanaURL }}
        dashboard: {{ .Values.grafanaURL }}/d/slo-detail?var-service={{ include "deployment.name" . }}
        {{- end }}
        summary: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
        description: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that
          the SLO is at risk as your error budget is getting exhausted. To know more
          about ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
      name: {{ include "deployment.name" . }} - latency SLO is at RISK
      pageAlert:
        labels:
          alert_type: symptom
          severity: critical
      ticketAlert:
        labels:
          alert_type: symptom
          severity: warning
    description: SLO to measure response time - {{ .Values.latencySLO }}% of the time requests should
          be succesfully served in < {{ .Values.latency }}ms. When you receive this alert it means that the
      SLO is at risk as your error budget is getting exhausted. To know more about
      ErrorBudgets and SLOs read https://sre.google/workbook/implementing-slos/
    name: latency-{{ include "deployment.name" . }}
    objective: {{ .Values.latencySLO }}
    sli:
      events:
        errorQuery: (sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}ingress=~"{{ .Values.nginxIngressMetrics.ingressName }}",le="+Inf", exported_service="{{ .Values.nginxIngressMetrics.serviceName }}"}[{{ printf "{{.window}}" }}])) - sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}ingress=~"{{ .Values.nginxIngressMetrics.ingressName }}",le="{{ divf .Values.latency 1000 }}", exported_service="{{ .Values.nginxIngressMetrics.serviceName }}"}[{{ printf "{{.window}}" }}])))
        totalQuery: sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{ {{- if hasKey .Values "cluster" }}cluster="{{ .Values.cluster }}", {{- end }}ingress=~"{{ .Values.nginxIngressMetrics.ingressName }}",le="+Inf", exported_service="{{ .Values.nginxIngressMetrics.serviceName }}"}[{{ printf "{{.window}}" }}]))
{{- end }}
{{- end }}
